--- a/dwm.c	2017-04-05 17:29:40.000000000 +0300
+++ b/dwm.c	2017-04-06 11:42:19.872956415 +0300
@@ -274,6 +274,7 @@
 static void bstackhoriz(Monitor *m);
 static void centeredmaster(Monitor *m);
 static void centeredfloatingmaster(Monitor *m);
+void gaplessgrid(Monitor *m);

 /* variables */
 static Systray *systray = NULL;
@@ -2120,6 +2120,42 @@
 	pop(c);
 }
 
+void
+gaplessgrid(Monitor *m) {
+       unsigned int n, cols, rows, cn, rn, i, cx, cy, cw, ch;
+       Client *c;
+
+       for(n = 0, c = nexttiled(m->clients); c; c = nexttiled(c->next), n++) ;
+       if(n == 0)
+               return;
+
+       /* grid dimensions */
+       for(cols = 0; cols <= n/2; cols++)
+               if(cols*cols >= n)
+                       break;
+       if(n == 5) /* set layout against the general calculation: not 1:2:2, but 2:3 */
+               cols = 2;
+       rows = n/cols;
+
+       /* window geometries */
+       cw = cols ? m->ww / cols : m->ww;
+       cn = 0; /* current column number */
+       rn = 0; /* current row number */
+       for(i = 0, c = nexttiled(m->clients); c; i++, c = nexttiled(c->next)) {
+               if(i/rows + 1 > cols - n%cols)
+                       rows = n/cols + 1;
+               ch = rows ? m->wh / rows : m->wh;
+               cx = m->wx + cn*cw;
+               cy = m->wy + rn*ch;
+               resize(c, cx, cy, cw - 2 * c->bw, ch - 2 * c->bw, False);
+               rn++;
+               if(rn >= rows) {
+                       rn = 0;
+                       cn++;
+               }
+       }
+}
+
 int
 main(int argc, char *argv[])
 {
